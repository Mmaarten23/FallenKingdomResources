{
  "$schema": "https://json-schema.org/draft-07/schema#",
  "$id": "https://jsonschema.mmaarten.me/fallenkingdom",
  "title": "FallenKingdomScript schema",
  "description": "A schema to validate scripts in FallenKingdom",
  "type": "object",
  "properties": {
    "Add": {
      "description": "Adds something to a variable. Same as Set stage, but adds rather than sets.",
      "type": "array",
      "anyOf": [
        {
          "$comment": "with holder",
          "minItems": 2,
          "maxItems": 4,
          "items": [
            {
              "description": "holder",
              "type": "string"
            },
            {
              "description": "variable",
              "type": "string"
            },
            {
              "description": "value",
              "type": [
                "string",
                "number"
              ]
            },
            {
              "description": "chat_tag",
              "type": "boolean"
            }
          ]
        },
        {
          "$comment": "without holder",
          "minItems": 1,
          "maxItems": 3,
          "items": [
            {
              "description": "variable",
              "type": "string"
            },
            {
              "description": "value",
              "type": [
                "string",
                "number"
              ]
            },
            {
              "description": "chat_tag",
              "type": "boolean"
            }
          ]
        }
      ]
    },
    "AddConfirmationToCommand": {
      "description": "Requires a player to run a command twice to execute it, and causes them to leave the script after execution.\n",
      "type": "string"
    },
    "AddPersistent": {
      "description": "Adds to a variable for a player persistently, so it does not get reset when the player relogs. Similar to Add stage. Useful for adding new virtual currencies.",
      "type": "array",
      "anyOf": [
        {
          "$comment": "with holder",
          "minItems": 2,
          "maxItems": 4,
          "items": [
            {
              "description": "holder",
              "type": "string"
            },
            {
              "description": "variable",
              "type": "string"
            },
            {
              "description": "value",
              "type": [
                "string",
                "number"
              ]
            },
            {
              "description": "chat_tag",
              "type": "boolean"
            }
          ]
        },
        {
          "$comment": "without holder",
          "minItems": 1,
          "maxItems": 3,
          "items": [
            {
              "description": "variable",
              "type": "string"
            },
            {
              "description": "value",
              "type": [
                "string",
                "number"
              ]
            },
            {
              "description": "chat_tag",
              "type": "boolean"
            }
          ]
        }
      ]
    },
    "AllowRejoining": {
      "description": "By default players will lose their script progress and have to start over if they re-join the server. This stage allows script saving to be turned on so that players are allowed to re-join the server and continue where they left.\n",
      "type": "boolean"
    },
    "AnimatedRandomOption": {
      "description": "Used to make menus such as the egg opening menu and lucky block opening menu. Similar to RandomOption stage, but shows a slot machine style UI to the player to show the reward being selected. Instead of just specifying the number of stages to randomly select a single stage from, you now specify the series of items (and their corresponding probabilities), which correspond to the following stages.",
      "type": "array",
      "anyOf": [
        {
          "minItems": 2,
          "maxItems": 3,
          "items": [
            {
              "description": "name",
              "type": "string"
            },
            {
              "description": "items",
              "type": "object",
              "additionalProperties": {
                "description": "Probability for this option",
                "type": "number",
                "exclusiveMinimum": 0,
                "maximum": 1
              },
              "minProperties": 1
            },
            {
              "description": "background",
              "type": "string"
            }
          ]
        },
        {
          "minItems": 1,
          "maxItems": 2,
          "items": [
            {
              "description": "items",
              "type": "object",
              "additionalProperties": {
                "description": "Probability for this option",
                "type": "number",
                "exclusiveMinimum": 0,
                "maximum": 1
              },
              "minProperties": 1
            },
            {
              "description": "background",
              "type": "string"
            }
          ]
        }
      ]
    },
    "Author": {
      "description": "Sets the author of the script. Useful for finding the scripter who made a script.",
      "type": "string"
    },
    "Beam": {
      "description": "Displays a beam from the source to the target. Displays only to the player whilst they are in the script.",
      "type": "array",
      "minItems": 6,
      "maxItems": 7,
      "items": {
        "type": "number"
      }
    },
    "BlockEntry": {
      "description": "Requires the player to walk on all blocks in a specified region. If they enter the same block twice, or walk diagonally, they will be removed from the script. Useful for making ice puzzles.",
      "type": "array",
      "minItems": 6,
      "maxItems": 8,
      "items": [
        {
          "description": "minX",
          "type": "integer"
        },
        {
          "description": "minY",
          "type": "integer"
        },
        {
          "description": "minZ",
          "type": "integer"
        },
        {
          "description": "maxX",
          "type": "integer"
        },
        {
          "description": "maxY",
          "type": "integer"
        },
        {
          "description": "maxZ",
          "type": "integer"
        },
        {
          "description": "fill",
          "type": "string"
        },
        {
          "description": "path",
          "type": "string"
        }
      ]
    },
    "Book": {
      "description": "Requires the player to read a specified book to progress.",
      "type": "array",
      "minItems": 1,
      "items": {
        "type": "string"
      }
    },
    "BreakBlock": {
      "description": "Requires the player to break a specified number of blocks.",
      "type": "array",
      "minItems": 1,
      "maxItems": 2,
      "items": [
        {
          "description": "block",
          "type": "string"
        },
        {
          "description": "amount",
          "type": "integer"
        }
      ]
    },
    "BroadcastMessage": {
      "description": "Broadcasts a message to all players on the server, even if they are not in the script.",
      "type": "string"
    },
    "Chair": {
      "description": "Allows players to click a specified block to sit down on it. Chairs can be made using the ClickEntity or ClickBlock and Ride stages, however this stage allows you to make chairs with just 1 stage. ",
      "type": "array",
      "minItems": 3,
      "maxItems": 5,
      "items": [
        {
          "description": "x",
          "type": "integer"
        },
        {
          "description": "y",
          "type": "integer"
        },
        {
          "description": "z",
          "type": "integer"
        },
        {
          "description": "yaw",
          "type": "integer"
        },
        {
          "description": "entities",
          "type": "string"
        }
      ]
    },
    "Challenge": {
      "description": "By default, scripts are not considered challenges. This stage marks the script as being a challenge. This means the script will be shown in the challenge log menu (accessed through /challengelog).",
      "type": [
        "string",
        "boolean"
      ]
    },
    "Chance": {
      "description": "Base class for stages that have a chance of giving a reward.",
      "type": "number",
      "exclusiveMinimum": 0,
      "maximum": 1
    },
    "Chat": {
      "description": "Requires the player to type a certain message into chat. Case insensitive. If the player types the required message, it will not show up in chat.",
      "type": "string"
    },
    "ChatRoom": {
      "description": "Makes the player enter a chat room when they enter this stage. Only other players in the stage will be able to see their chat messages. The player will stay in the stage until they are removed from it by another script.",
      "type": "string"
    },
    "Checkpoint": {
      "description": "Teleports the player back to a specified location when they are in the stage and fall 10 blocks below the location. Creates a hologram to indicate where the checkpoint is to the player. Useful for parkour challenges.",
      "type": "array",
      "minItems": 3,
      "maxItems": 6,
      "items": [
        {
          "description": "x",
          "type": "number"
        },
        {
          "description": "y",
          "type": "number"
        },
        {
          "description": "z",
          "type": "number"
        },
        {
          "description": "yaw",
          "type": "integer"
        },
        {
          "description": "pitch",
          "type": "integer"
        },
        {
          "description": "height",
          "type": "number"
        }
      ]
    },
    "Cinematic": {
      "description": "Puts horizontal black bars on the players screen, giving a cinematic effect. Requires a texture to be added to the resource pack. Works well when used with the Track stage, Freeze stage, or Filter stage.",
      "type": "array",
      "minItems": 0,
      "maxItems": 1,
      "items": {
        "type": "number",
        "exclusiveMinimum": 0
      }
    },
    "ClearInventory": {
      "description": "Clears the inventory of the player",
      "type": "array",
      "maxItems": 0
    },
    "ClickBlock": {
      "description": "Requires the player to click a block at a given location or with the given name to progress.",
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "array",
          "minItems": 3,
          "maxItems": 3,
          "items": [
            {
              "description": "x",
              "type": "integer"
            },
            {
              "description": "y",
              "type": "integer"
            },
            {
              "description": "z",
              "type": "integer"
            }
          ]
        }
      ]
    },
    "ClickEntity": {
      "description": "Requires a player to click an entity to progress.",
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "array",
          "minItems": 1,
          "maxItems": 2,
          "items": [
            {
              "description": "entity",
              "type": "string"
            },
            {
              "description": "look",
              "type": "boolean"
            }
          ]
        },
        {
          "type": "array",
          "minItems": 1,
          "items": {
            "type": "string"
          }
        }
      ]
    },
    "ClickEntityOptions": {
      "description": "Requires a player to click an entity which corresponds to an option. Each entity is its own option. The player must click the entity to choose it as their option. This stage must be followed by effect stages corresponding to the options. The player will skip all stages which are options when they select an option.",
      "type": "array",
      "minItems": 2,
      "items": {
        "type": "string"
      }
    },
    "ClickItem": {
      "description": "Triggers when the player clicks a specified item.",
      "type": "array",
      "minItems": 1,
      "maxItems": 2,
      "items": [
        {
          "description": "item",
          "type": "string"
        },
        {
          "description": "amount",
          "type": "integer"
        }
      ]
    },
    "ClickToStart": {
      "description": "Makes the player start the script when they click it in a menu, such as the quest log menu or the challenges menu. It will not make the player start the script if they are already doing the script.",
      "type": "array",
      "maxItems": 0
    },
    "Command": {
      "description": "Requires a player to type a command to progress.",
      "type": "string"
    },
    "Comment": {
      "description": "Creates a comment to explain how a part of the script work. Can also be used as a label for the Skip stage to skip to.",
      "type": "string"
    },
    "Complete": {
      "description": "Sets the script as completed for a player when they pass through this stage. Script completion can be checked with /hascompletedscript, and the Completed and NotCompleted stages. E.g",
      "type": [
        "string",
        "array"
      ]
    },
    "Completed": {
      "description": "Requires the player to complete a specified script to progress. Opposite of NotCompleted stage. Can optionally include leaveScript, which if true will make the player leave the script completely if they do not meet the requirement, or if false will make the player go back to the last trigger stage. Default is true if it is not specified.",
      "type": "array",
      "minItems": 1,
      "maxItems": 3,
      "items": [
        {
          "description": "script_key",
          "type": "string"
        },
        {
          "description": "leave_script",
          "type": "boolean"
        },
        {
          "description": "message",
          "type": "string"
        }
      ]
    },
    "ControlledTrack": {
      "description": "Puts a player on a track where they can slide forwards or sideways until they hit a block. Useful for creating the effect of sliding on ice, and making puzzles where the player must reach a destination by only moving forwards or sideways. You must specify the starting location for the player.",
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "array",
          "minItems": 3,
          "maxItems": 5,
          "items": [
            {
              "description": "x",
              "type": "number"
            },
            {
              "description": "y",
              "type": "number"
            },
            {
              "description": "z",
              "type": "number"
            },
            {
              "description": "yaw",
              "type": "integer"
            },
            {
              "description": "speed",
              "type": "number"
            }
          ]
        },
        {
          "type": "array",
          "minItems": 3,
          "maxItems": 4,
          "items": [
            {
              "description": "x",
              "type": "number"
            },
            {
              "description": "y",
              "type": "number"
            },
            {
              "description": "z",
              "type": "number"
            },
            {
              "description": "speed",
              "type": "number"
            }
          ]
        }
      ]
    },
    "Cooldown": {
      "description": "Requires a specified amount of time to of elapsed before the player passes through this stage again, otherwise the player will leave the script. Useful for short cooldowns, but this stage will reset whenever a server restarts. For longer cooldowns, use NotComplete and Complete stages, which are persistent after server restarts.",
      "type": "array",
      "minItems": 2,
      "maxItems": 2,
      "items": [
        {
          "description": "cooldown",
          "type": "number"
        },
        {
          "description": "message",
          "type": "string"
        }
      ]
    },
    "CreateCustomEntity": {
      "description": "Combines multiple existing entities to create a new custom entity. Useful for combining multiple armor stand serving as different body parts of a larger entity.",
      "type": "array",
      "anyOf": [
        {
          "minItems": 1,
          "items": {
            "type": "string"
          }
        },
        {
          "minItems": 4,
          "items": [
            {
              "description": "key",
              "type": "string"
            },
            {
              "description": "x",
              "type": "number"
            },
            {
              "description": "y",
              "type": "number"
            },
            {
              "description": "z",
              "type": "number"
            },
            {
              "description": "schematic",
              "type": "string"
            }
          ]
        }
      ]
    },
    "CreateEmoji": {
      "description": "Creates a chat emoji.",
      "type": "array",
      "minItems": 2,
      "maxItems": 3,
      "items": [
        {
          "description": "name",
          "type": "string"
        },
        {
          "description": "emoji",
          "type": "string"
        },
        {
          "description": "rank_or_cosmetic_type",
          "type": "string"
        }
      ]
    },
    "CreateEntity": {
      "description": "Creates an entity. The key is what you use to reference the entity in a later stage.",
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "entity": {
          "$comment": "This should probably be an enum with all the entity types",
          "type": "string"
        },
        "skin": {
          "type": "string"
        },
        "location": {
          "type": "array",
          "minItems": 3,
          "maxItems": 4,
          "items": [
            {
              "type": "number"
            },
            {
              "type": "number"
            },
            {
              "type": "number"
            },
            {
              "type": "number",
              "minimum": -90,
              "maximum": 90
            }
          ]
        },
        "name": {
          "type": "string"
        },
        "pokemon": {
          "type": "string"
        },
        "form": {
          "type": "string"
        },
        "look": {
          "type": "boolean"
        },
        "baby": {
          "type": "boolean"
        },
        "gravity": {
          "type": "boolean"
        },
        "cape": {
          "type": "boolean"
        },
        "charged": {
          "type": "boolean"
        },
        "sleeping": {
          "type": "boolean"
        },
        "sitting": {
          "type": "boolean"
        },
        "riding": {
          "type": "string"
        },
        "glow": {
          "type": "boolean"
        },
        "hand_pose": {
          "type": "string",
          "enum": [
            "Left",
            "Right",
            "None"
          ]
        },
        "villager_type": {
          "type": "string",
          "enum": [
            "Desert",
            "Jungle",
            "Plains",
            "Savana",
            "Snow",
            "Swamp",
            "Taiga"
          ]
        },
        "villager_profession": {
          "type": "string",
          "enum": [
            "Armorer",
            "Butcher",
            "Cartographer",
            "Cleric",
            "Farmer",
            "Fisherman",
            "Fletcher",
            "Leatherworker",
            "Librarian",
            "Mason",
            "Nitwit",
            "Shepherd",
            "Toolsmith",
            "Weaponsmith"
          ]
        },
        "rabbit_type": {
          "type": "string",
          "enum": [
            "Brown",
            "White",
            "Black",
            "Black And White",
            "Gold",
            "Salt And Pepper",
            "The Killer Bunny"
          ]
        },
        "cat_type": {
          "type": "string",
          "enum": [
            "Tabby",
            "Black",
            "Red",
            "Siamese",
            "British Shorthair",
            "Calico",
            "Persian",
            "Ragdoll",
            "White",
            "Jellie",
            "All Black"
          ]
        },
        "marker": {
          "type": "boolean"
        },
        "name_background": {
          "type": "boolean"
        },
        "speed": {
          "type": "number"
        },
        "item": {
          "description": "optional for Dropped Item entities",
          "type": "string"
        },
        "block": {
          "description": "optional for Falling Block entities",
          "type": "string"
        },
        "visible": {
          "description": "for Armor Stands only, use Show and Hide stages to show and hide",
          "type": "boolean"
        },
        "global": {
          "type": "boolean"
        },
        "hand": {
          "type": "string"
        },
        "offhand": {
          "type": "string"
        },
        "helmet": {
          "type": "string"
        },
        "chestplate": {
          "type": "string"
        },
        "leggings": {
          "type": "string"
        },
        "boots": {
          "type": "string"
        }
      },
      "additionalProperties": false,
      "oneOf": [
        {
          "required": [
            "key",
            "skin",
            "location"
          ]
        },
        {
          "required": [
            "key",
            "entity",
            "location"
          ]
        }
      ]
    }
  },
  "additionalProperties": false
}